I"*<h2><strong>Work</strong></h2>

<h4>FIDO2 및 U2F 인증장치(HID) 개발</h4>

<div style="text-align: center">
<img src="./img/fido_alliance.jpeg" alt="fido_alliance" />
</div>

<p><strong>개발스택</strong>: C++, Keil, Fido2, U2F, CBOR</p>

<p><strong>개요</strong>: FIDO2와 U2F 프로토콜을 지원하는 인증장치를 개발하여 FIDO Alliance의 인증을 받았습니다. FIDO2 프로토콜은 기존의 소스를 활용하여 스펙에 맞지 않는 부분들을 보완하는 역할을 수행하였고, U2F 프로토콜의 경우는 스펙 문서를 보며 스펙에 맞게 처음부터 개발을 담당하였고, 통역의 도움을 받아 미국 본사와 인터뷰를 통하여 인증을 성공적으로 완료하였습니다.</p>

<p><strong>느낀점</strong>: 실제로 스펙 문서를 보며 스펙을 맞춰가면서 개발한 경험이 처음이라 초기에는 막막한 느낌이 있어서 선임분들의 도움을 받았었는데 결국 가장 중요한 것은 Input과 Output이 스펙에 맞아야 한다는 점을 깨닫고 나서부터는 비교적 수월하게 개발이 진행되었던 것 같습니다. 스펙 문서를 보며 HID 메세지와 CBOR 메세지를 직접 뜯어보며 문제를 찾고, 스펙에 모호한 부분이 있을 때는 본사 측과 스펙에 관하여 질의를 주고 받았던 경험이 기억에 남습니다. 어느게 맞는 건지 모르는 상황에서 혼란스럽기도 하였지만 그 만큼 문제를 해결하였을 때 오는 성취감이 크게 느껴져 재미있었던 경험이였습니다.</p>

<hr />

<h4>Fido2 Windows Library 개발</h4>

<p><br /></p>

<p><strong>개발스택</strong>: C++, Visual Studio, mbedTLS, cpprest, Fido2, json</p>

<p><strong>개요</strong>: 기존에 개발되어 있던 Fido 라이브러리인 Ydentity2의 Windows 개발의 유지보수를 담당하였습니다. 에러 코드를 정리하고, Windows 상위 버전과 하위 버전에 따라 알맞은 동작을 수행하게끔 수정하고, 모바일 앱과 연동하여 푸쉬를 통해 FIDO 메세지를 주고 받을 수 있도록 기능을 추가하여 배포까지 담당하였습니다.</p>

<p><strong>느낀점</strong>: 기존 프로젝트를 받아 작업을 수행한 경험이 처음이라 코드 분석에 시간을 많이 들였었습니다. 에러코드 정리를 하며 실제로 개발자가 보아야 할 에러와 사용자가 보아야 할 에러에 대해 알게 되었고, cpprest를 활용하여 json 데이터를 파싱하고 생성하며 json에 대한 개념을 잡을 수 있었습니다. 회사의 주력 사업인 FIDO에 대해 직접 피부로 느껴볼 수 있는 경험이 되었습니다. 개발 대행이 아닌 직접 판매하는 제품을 개발하여 여러 고객사에 배포하는 경험을 통해 제품의 배포는 어떻게 진행되는지 배울 수 있었습니다. 하지만, 아무래도 기존에 작업되어 있던 코드에 유지보수 작업을 하다보니 API 형태로 구현되어 있는 기능들이 많아 조금 더 low한 단계의 개발을 하지못해 아쉬웠습니다.</p>

<hr />

<h4>국제해킹대회 Codegate 2018 문제 출제 및 운영</h4>

<div style="text-align: center">
<img src="./img/codegate2018.jpeg" alt="codegate2018" />
</div>
<p><br /></p>

<p><strong>개발스택</strong>: C, C++, Visual Studio, VS Code, Docker</p>

<p><strong>개요</strong>: 총 3문제를 제작하였고, 그 중 2문제(출제된 문제이름: Shall we dance, Daysnote)가 실제로 출제 되었습니다. 출제된 문제는 Windows PE 리버싱 1문제, 시스템해킹 1문제입니다. 리버싱 문제는 C++을 사용하여 Windows 환경에서 mp3 플레이어를 제작하여 손상된 파일을 복구하는 방식으로 문제를 제작하였고, 시스템 해킹의 경우에는 Ubuntu 환경에서 C를 사용하여 제작하였고 1 Byte BufferOverflow 취약점을 사용하여 문제를 제작하였습니다. 제작된 문제들은 AWS 서버에 각각 Docker 컨테이너를 사용하여 접근 하도록 하였습니다.</p>

<p><strong>느낀점</strong>: 규모가 큰 해킹 대회에 문제를 출제하게 되어 정말 뜻깊고 갚진 경험이었습니다. 실제로 대회 현장에 가서 네트워크 구성부터 운영까지 진행하며 능력있는 해커들이 문제를 푸는 모습을 직접 볼 수 있었던게 너무 좋고 설레었습니다. 아직 경험이 많이 없고 입사한지 얼마 지나지 않았을 때라 실제 운영적인 면에서 도움이 될 수 있었던 부분이 작았고, 실수도 있었지만 48시간 동안 열심히 발로 뛰어다니고 로그만 보고 있어도 재미있었던 생각이 납니다. 시스템 해킹 문제를 제작하며 제가 만든 문제를 제가 푸는데 어려움을 겪어서 회사 선배분들께 도움을 받았었는데, 회사 선배분들의 창의성에 정말 많은 것을 배웠습니다. 문제를 제작하며 Docker에 대해서도 배웠고, Ubuntu 환경에서 ssh를 활용하여 개발을 하는 방식, Python으로 Shellcode를 제작하는 법 등 정말 다양한 조언을 얻었습니다. 도움을 받기만 한 것 같아 너무 죄송하고, 정말 값진 경험을 하게 해주신 것에 대해 한 없이 감사하게 생각하고 있습니다. 후에 회사 생활에서 제가 선배의 위치가 되면 ‘나도 저렇게 능력있는 사람이 되어야겠다.’라고 생각하게 된 계기가 되었습니다.</p>

<hr />

<h4>2018 사이버가디언즈리그 문제 출제 및 운영</h4>

<div style="text-align: center">
<img src="./img/cyber.jpeg" alt="cyber2018" />
</div>
<p><br /></p>

<p><strong>개발스택</strong>: C, C++, HTML, PHP, Apache, MySQL, Visual Studio, VS Code, AWS, Docker</p>

<p><strong>개요</strong>: 고등학생들을 대상으로 한 일정 기간을 간격으로 리그 형식으로 진행 되는 해킹방어대회입니다. 해당 대회에서는 조금 더 운영적인 측면으로 기여를 할 수 있게 되었고, 다양한 범위로 문제를 출제하게 되었습니다. 운영적인 부분에서는 현장 네트워크 세팅부터 AWS EC2를 사용한 포트 관리 및 문제 오픈을 담당하였고, 웹 문제부터 Random Seed를 활용한 문제, 간단한 Buffer Overflow, UAF 문제등 여러가지 문제를 출제하였습니다.</p>

<p><strong>느낀점</strong>: 2번째로 문체 출제 및 운영을 담당하게 된 대회여서 처음보다는 조금 더 도움을 줄 수 있었던 것 같습니다. WIFI 공유기 설정부터 시작해서 IP 주소 제한, EC2 포트 관리, 로그 분석 등 대회 운영적으로 처음보다는 더 여러가지 방면을 맡아 수행하였습니다. 실제로 저보다 어린 고등학생들이 문제를 풀고 심지어는 저보다 더 잘하는 학생들을 보고 많은 자극을 얻었습니다. 문제 출제에 관련해서는 고등학생들을 대상으로 하다보니 이전보다는 가벼운 수준으로 문제가 출제되어 크게 부담 없이 수행할 수 있었으며, 웹 문제 출제를 통해 간단한 웹 개발도 해볼 수 있었습니다. 주기적으로 열리는 리그 형식의 대회였기 때문에 해당 기간동안 꾸준히 문제를 출제해야하여서 일정 관리 부분에서도 큰 경험을 쌓을 수 있었습니다.</p>

<hr />

<h4>특허 보안 모듈 라이브러리 개발</h4>

<p><br /></p>

<p><strong>개발스택</strong>: C, VS Code, OpenSSL</p>

<p><strong>개요</strong>: Secure Coding 가이드에 알맞은 필터링, 암호화 등과 같은 기능을 제공하는 보안 API및 로그수집 API를 OpenSSL을 사용하여 제작하였습니다. 또한, 여러 개의 디바이스 간의 소켓 통신을 통해 바이너리나 파일의 변조를 자가검진하고 스스로 치료하는 보안 모듈을 개발하여 제공하였습니다.</p>

<p><strong>느낀점</strong>: 기존에 소켓 프로그래밍에 대한 지식이 부족하였었는데 해당 작업을 수행하며 조금 더 소켓 통신에 대한 이해도를 높일 수 있었고, 암호화 및 해쉬, 키 관리 등과 같은 부분에서도 부족하다는 걸 깨닫고 다시 한 번 공부를 하게 되었습니다. OpenSSL을 사용한 개발에대한 경험이 없었는데 OpenSSL 사용법도 익히게 되고, 시큐어 코딩에 대한 전반적인 지식도 알게 되었습니다. 기존에는 해킹에 관한 지식을 쌓고 주로 공격자의 입장에서 생각해보았다면 이번에는 역으로 방어자의 입장에서 생각해보며 정보보안의 목적을 일깨우고, 해커의 입장이 아닌 정보 보안 개발자로써의 업무를 경험해 볼 수 있었습니다. 아무래도 특허 모듈이다보니 정확한 목표 설정과 아이디어를 가지고 개발을 하는 것이 아니라 개발을 해가며 아이디어 수정을 하다 보니 끝에는 처음의 방향성과 목적이 흐지부지 된 것 같아 완성도적인 측면에서 아쉬움이 남습니다.</p>

<hr />

<h2><strong>Personal</strong></h2>

<h4>Leaning in the wind</h4>

<p><br /></p>

<p><strong>개발스택</strong>: C++, Visual Studio, DX</p>

<p><strong>개요</strong>: Secure Coding 가이드에 알맞은 필터링, 암호화 등과 같은 기능을 제공하는 보안 API및 로그수집 API를 OpenSSL을 사용하여 제작하였습니다. 또한, 여러 개의 디바이스 간의 소켓 통신을 통해 바이너리나 파일의 변조를 자가검진하고 스스로 치료하는 보안 모듈을 개발하여 제공하였습니다.</p>

<p><strong>느낀점</strong>: 기존에 소켓 프로그래밍에 대한 지식이 부족하였었는데 해당 작업을 수행하며 조금 더 소켓 통신에 대한 이해도를 높일 수 있었고, 암호화 및 해쉬, 키 관리 등과 같은 부분에서도 부족하다는 걸 깨닫고 다시 한 번 공부를 하게 되었습니다. OpenSSL을 사용한 개발에대한 경험이 없었는데 OpenSSL 사용법도 익히게 되고, 시큐어 코딩에 대한 전반적인 지식도 알게 되었습니다. 기존에는 해킹에 관한 지식을 쌓고 주로 공격자의 입장에서 생각해보았다면 이번에는 역으로 방어자의 입장에서 생각해보며 정보보안의 목적을 일깨우고, 해커의 입장이 아닌 정보 보안 개발자로써의 업무를 경험해 볼 수 있었습니다. 아무래도 특허 모듈이다보니 정확한 목표 설정과 아이디어를 가지고 개발을 하는 것이 아니라 개발을 해가며 아이디어 수정을 하다 보니 끝에는 처음의 방향성과 목적이 흐지부지 된 것 같아 완성도적인 측면에서 아쉬움이 남습니다.</p>
:ET